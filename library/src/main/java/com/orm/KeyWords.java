package com.orm;

import java.util.ArrayList;

/**
 * Created by root on 29/03/16.
 */
public class KeyWords {
    public ArrayList<String> rWords = new ArrayList<String>();
    public boolean ReserverWords(String word){
        rWords.add("");
        rWords.add("ABORT");
        rWords.add("ACTION");
        rWords.add("ADD");
        rWords.add("AFTER");
        rWords.add("ALTER");
        rWords.add("ANALYZE");
        rWords.add("AND");
        rWords.add("AS");
        rWords.add("ASC");
        rWords.add("ATTACH");
        rWords.add("AUTOINCREMENT");
        rWords.add("BEFORE");
        rWords.add("BEGIN");
        rWords.add("BETWEEN");
        rWords.add("BY");
        rWords.add("CASCADE");
        rWords.add("CASE");
        rWords.add("CAST");
        rWords.add("CHECK");
        rWords.add("COLLATE");
        rWords.add("COLUMN");
        rWords.add("COMMIT");
        rWords.add("CONFLICT");
        rWords.add("CONSTRAINT");
        rWords.add("CREATE");
        rWords.add("CROSS");
        rWords.add("CURRENT_DATE");
        rWords.add("CURRENT_TIME");
        rWords.add("CURRENT_TIMESTAMP");
        rWords.add("DATABASE");
        rWords.add("DEFAULT");
        rWords.add("DEFERRABLE");
        rWords.add("DEFERRED");
        rWords.add("DELETE");
        rWords.add("DESC");
        rWords.add("DETACH");
        rWords.add("DISTINCT");
        rWords.add("DROP");
        rWords.add("EACH");
        rWords.add("ELSE");
        rWords.add("END");
        rWords.add("ESCAPE");
        rWords.add("EXCEPT");
        rWords.add("EXCLUSIVE");
        rWords.add("EXISTS");
        rWords.add("EXPLAIN");
        rWords.add("FAIL");
        rWords.add("FOR");
        rWords.add("FOREIGN");
        rWords.add("FROM");
        rWords.add("FULL");
        rWords.add("GLOB");
        rWords.add("GROUP");
        rWords.add("HAVING");
        rWords.add("IF");
        rWords.add("IGNORE");
        rWords.add("IMMEDIATE");
        rWords.add("IN");
        rWords.add("INDEX");
        rWords.add("INDEXED");
        rWords.add("INITIALLY");
        rWords.add("INNER");
        rWords.add("INSERT");
        rWords.add("INSTEAD");
        rWords.add("INTERSECT");
        rWords.add("INTO");
        rWords.add("IS");
        rWords.add("ISNULL");
        rWords.add("JOIN");
        rWords.add("KEY");
        rWords.add("LEFT");
        rWords.add("LIKE");
        rWords.add("LIMIT");
        rWords.add("MATCH");
        rWords.add("NATURAL");
        rWords.add("NO");
        rWords.add("NOT");
        rWords.add("NOTNULL");
        rWords.add("NULL");
        rWords.add("OF");
        rWords.add("OFFSET");
        rWords.add("ON");
        rWords.add("OR");
        rWords.add("ORDER");
        rWords.add("OUTER");
        rWords.add("PLAN");
        rWords.add("PRAGMA");
        rWords.add("PRIMARY");
        rWords.add("QUERY");
        rWords.add("RAISE");
        rWords.add("RECURSIVE");
        rWords.add("REFERENCES");
        rWords.add("REGEXP");
        rWords.add("REINDEX");
        rWords.add("RELEASE");
        rWords.add("RENAME");
        rWords.add("REPLACE");
        rWords.add("RESTRICT");
        rWords.add("RIGHT");
        rWords.add("ROLLBACK");
        rWords.add("ROW");
        rWords.add("SAVEPOINT");
        rWords.add("SELECT");
        rWords.add("SET");
        rWords.add("TABLE");
        rWords.add("TEMP");
        rWords.add("TEMPORARY");
        rWords.add("THEN");
        rWords.add("TO");
        rWords.add("TRANSACTION");
        rWords.add("TRIGGER");
        rWords.add("UNION");
        rWords.add("UNIQUE");
        rWords.add("UPDATE");
        rWords.add("USING");
        rWords.add("VACUUM");
        rWords.add("VALUES");
        rWords.add("VIEW");
        rWords.add("VIRTUAL");
        rWords.add("WHEN");
        rWords.add("WHERE");
        rWords.add("WITH");
        rWords.add("WITHOUT");
        if(rWords.contains(word))
            return true;
        else
            return false;
    }
}


